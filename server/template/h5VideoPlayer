<template lang="pug">
.video-box#videoBox
  .bg-box
    img.android-bg(src="https://cunchu.site/owo/click-bg.jpg", :click="play", ontouchmove="return false;")
  video#videoPlay(
    src="https://cunchu.site/owo/enter.mp4",
    preload="auto",
    autoplay ="autoplay",
    webkit-playsinline="true",
    playsinline="true",
    x5-video-player-type="h5",
    x-webkit-airplay="true",
    x5-video-orientation="landscape",
    x5-video-player-fullscreen='true',
    ontouchstart="return false;"
  )
  .text#text
</template>

<script>
  module.exports = {
    data: {
      isplay: false,
      playComplete: false,
      canPlay: false,
      weixinReady: false,
      isFullScreenPlay: false,
      imgArr: []
    },
    created: function () {
      // 判断是否为安卓手机，如果是安卓手机需要点击播放视频
      const u = window.navigator.userAgent.toLowerCase()
      const isAndroid = u.indexOf('android') > -1 || u.indexOf('linux') > -1
      const isWeiXin = u.match(/MicroMessenger/i) == 'micromessenger'
      const isIOS = /(iPhone|iPad|iPod|iOS)/i.test(navigator.userAgent)

      // 屏幕大小改变刷新页面
      window.onresize = () => {
        if (!this.data.isFullScreenPlay) {
          window.location.reload()
        }
      }
      // 视频播放器
      const videoPlay = $('#videoPlay')[0]
      const body = $('body')[0]
      // 移动端情况下去掉静音标识
      if (isWeiXin && isIOS) {
        console.log('是微信的ios, 取消遮蔽层!')
        $('.bg-box')[0].style.display = 'none'
      }
      // 如果不在微信环境下默认就可以播放
      this.data.weixinReady = !isWeiXin
      // ios不会触发oncanplay事件
      if (isIOS) this.data.canPlay = true

      // 错误事件
      videoPlay.onerror = function() {
        $('#videoBox')[0].innerHTML = ''
        $('#videoBox')[0].style.display = 'none'
      }
      
      this.changeScreenSize()
      
      videoPlay.ontimeupdate = (e) => {
        if (e.target.currentTime > 16) {
          this.playVideo()
        }
      }
      // 方法
      document.addEventListener('WeixinJSBridgeReady', () => {
        this.data.weixinReady = true
        // alert('微信准备就绪')
        // alert(this.data.canPlay)
        if (this.data.canPlay && this.data.weixinReady) {
          // alert('开始播放')
          videoPlay.play()
        }
      }, false)

      // 加载文字图片
      for (var i = 0; i < 42; i++) {
        this.data.imgArr.push(`https://cunchu.site/owo/material/haijun/image/${i}.png`);
      }
      this.loadImages({loadArr: this.data.imgArr})
    },
    play: function () {
      // 视频播放器
      $('.bg-box')[0].style.top = '-100%'
      const videoPlay = $('#videoPlay')[0]
      console.log('点击播放')
      // 如果不立即隐藏进入全屏播放时会产生残影
      $('.bg-box')[0].style.display = 'none'
      // 进入全屏事件
      videoPlay.addEventListener("x5videoenterfullscreen", () => {
        // 标记状态
        this.data.isFullScreenPlay = true
        // 确保android-bg已经进行隐藏
        setTimeout(() => {
          $('body')[0].style.transform = ''
          setTimeout(() => {
            videoPlay.style.top = '0'
            videoPlay.style.left = '0'
            // 视频分辨率比例
            const videoRatio = 1920 / 1080
            
            let cw = window.innerWidth
            let ch = window.innerHeight
            if (videoRatio >  window.innerWidth / window.innerHeight) {
              console.log('以高度为基准!')
              const videoWidth = ch * videoRatio
              videoPlay.style.height = ch + 'px'
              videoPlay.style.width = videoWidth + 'px'
              // 将视频1保持在中间
              videoPlay.style.left = -(videoWidth - cw) / 2 + 'px'
            } else {
              const videoHeight = cw / videoRatio
              videoPlay.style.width = cw + 'px'
              videoPlay.style.height = videoHeight + 'px'
              // 将视频1保持在中间
              videoPlay.style.top = -(videoHeight - ch) / 2 + 'px'
            }
          }, 500)
        }, 0)
        
      })
      // 退出全屏事件
      videoPlay.addEventListener("x5videoexitfullscreen", () => {
        $('body')[0].style.transform = 'translate3d(0, 0, 0) rotate(90deg)'
        $('#videoBox')[0].innerHTML = ''
        $('#videoBox')[0].style.display = 'none'
        setTimeout(() => {
          this.data.isFullScreenPlay = false
        }, 1000)
      })
      setTimeout(() => {
        videoPlay.play()
      }, 100)
    },
    playVideo: function () {
      if (this.data.isplay) return

      this.data.isplay = true
      console.log('开始播放了')
      const textRatio = 1018 / 824
      $("#text")[0].style.height = $tool.getScreenInfo().clientHeight * 0.8 + 'px'
      $("#text")[0].style.width = $tool.getScreenInfo().clientHeight * 0.8 * textRatio + 'px'
      
      let framePlayer = new vFramePlayer({
        dom: $("#text")[0],
        imgArr: this.data.imgArr,
        useCanvas: true
      })
      framePlayer.play(0, 41, {
        "fps": 6,
        "useCanvas": true,
        onComplete: () => {
          console.log("完成播放")
          // 标记为已完成播放
          this.data.playComplete = true
        }
      })
    },
    changeScreenSize: function () {
      const body = $('body')[0]
      console.log($tool.getScreenInfo())
      // 屏幕信息
      const screenInfo = $tool.getScreenInfo()
      // 视频分辨率比例
      const videoRatio = 1920 / 1080
      
      let cw = screenInfo.clientWidth
      let ch = screenInfo.clientHeight
      
      console.log(`屏幕分辨率比: ${screenInfo.ratio}`)
      console.log(`视频分辨率比: ${videoRatio}`)

      if (screenInfo.ratio < 1.77777) {
        $('.android-bg')[0].style.width = '100%'
      } else {
        $('.android-bg')[0].style.height = '100%'
      }
      // 判断是横屏还是竖屏
      if (screenInfo.ratio < 1) {
        console.log('竖屏模式!')
        cw = screenInfo.clientHeight
        ch = screenInfo.clientWidth
        // if (isAndroid) {
        //   cw = cw + 200
        // }
        // 竖屏处理
        body.style.position = 'absolute'
        body.style.width = screenInfo.clientHeight + 'px'
        body.style.height = screenInfo.clientWidth + 'px'
        body.style.transform = 'translate3d(0, 0, 0) rotate(90deg)'
        body.style.left = 'calc(50% - ' + screenInfo.clientHeight / 2 + 'px)'
        body.style.top = 'calc(50% - ' + screenInfo.clientWidth / 2 + 'px)'
        setTimeout(() => {
          body.style.opacity = '1'
        }, 0)
        // 判断以高度为基准还是以宽度为基准
        console.log(videoRatio, $tool.getScreenInfo().ratio)
        if (videoRatio > $tool.getScreenInfo().ratio) {
          console.log('以高度为基准!')
          const videoWidth = ch * videoRatio
          videoPlay.style.height = ch + 'px'
          videoPlay.style.width = videoWidth + 'px'
          // 将视频1保持在中间
          videoPlay.style.left = -(videoWidth - cw) / 2 + 'px'
        } else {
          const videoHeight = cw / videoRatio
          videoPlay.style.width = cw + 'px'
          videoPlay.style.height = videoHeight + 'px'
          // 将视频1保持在中间
          videoPlay.style.top = -(videoHeight - ch) / 2 + 'px'
        }
      } else {
        setTimeout(() => {
          body.style.opacity = '1'
        }, 0)
        // console.log(videoRatio, screenInfo.ratio)
        // 判断以高度为基准还是以宽度为基准
        if (videoRatio > $tool.getScreenInfo().ratio) {
          console.log('以高度为基准!')
          const videoWidth = ch * videoRatio
          videoPlay.style.height = ch + 'px'
          videoPlay.style.width = videoWidth + 'px'
          // 将视频1保持在中间
          videoPlay.style.left = -(videoWidth - cw) / 2 + 'px'
        } else {
          const videoHeight = cw / videoRatio
          videoPlay.style.width = cw + 'px'
          videoPlay.style.height = videoHeight + 'px'
          // 将视频1保持在中间
          videoPlay.style.top = -(videoHeight - ch) / 2 + 'px'
        }
      }
    },
    loadImages: function (Parameter) {
      var sources = Parameter.loadArr;
      var loadingPercent = "";
      var count = 0;
      var images = {};
      var imgNum = sources.length;
      for (var src in sources) {
        var path = src;
        images[path] = new Image();
        images[path].onload = function () {
          count++;
          if (count >= imgNum) {
            if (Parameter.complete) {
              Parameter.complete(images);
            }
          }
        };
        images[path].onerror = function () {
          count++;
          if (count >= imgNum) {
            if (Parameter.complete) {
              Parameter.complete(images)
            }
          }
        };
        images[path].src = sources[path]
      }
    }
  }
</script>


<style lang="less">
  .video-box {
    width: 100%;
    height: 100%;
    overflow: hidden;
    position: fixed;
    text-align: center;
    align-items: center;
    opacity: 1;
    z-index: 99;
    transition: all 1s;
    background-color: black;
    video {
      height: 100%;
      width: 100%;
      margin: auto;
      left: 0;
      top: 0;
      position: absolute;
      object-position: "110px 110px";
      position: fixed;
      object-fit: fill;
    }
    .text {
      color: white;
      position: fixed;
      left: 5%;
      top: 0;
      bottom: 0;
      margin: auto;
    }
  }
  .bg-box {
    position: fixed;
    left: 0;
    top: 0;
    height: 100%;
    width: 100%;
    z-index: 99;
    transition: top 1s linear;
    background-color: black;
  }
  .android-bg {
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    right: 0;
    margin: auto;
    z-index: 99;
  }
  
</style>